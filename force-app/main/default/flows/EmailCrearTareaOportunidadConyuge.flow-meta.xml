<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>55.0</apiVersion>
    <assignments>
        <description>Asignación para almacenar la información del email en una tarea</description>
        <name>CopiarEmail</name>
        <label>CopiarEmail</label>
        <locationX>50</locationX>
        <locationY>1571</locationY>
        <assignmentItems>
            <assignToReference>TareaEmailAux.Type</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Email</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TareaEmailAux.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Subject</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TareaEmailAux.IsReminderSet</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TareaEmailAux.ActivityDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.MessageDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TareaEmailAux.CreatedDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.CreatedDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TareaEmailAux.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetOppConyuge.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TareaEmailAux.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.TextBody</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TareaEmailAux.Notas__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ToAddress</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TareaEmailAux.CreatedById</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.CreatedById</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TareaEmailAux.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CrearEmailTarea</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Almacenamos el ID de la cuenta del cónyuge</description>
        <name>IDCuentaConyuge</name>
        <label>IDCuentaConyuge</label>
        <locationX>270</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>ConyugeAccountID</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterarDecisores.Contact.Account.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterarDecisores</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Nodo de decisión para comprobar si el correo electrónico ha sido enviado desde una oportunidad</description>
        <name>AsociadoAOpp</name>
        <label>Asociado a Opp</label>
        <locationX>858</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Si</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RelatedToId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>006</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetOportunidad</targetReference>
            </connector>
            <label>Si</label>
        </rules>
    </decisions>
    <decisions>
        <description>Nodo de decisión para comprobar si la oportunidad está cerrada</description>
        <name>Cerrada</name>
        <label>Cerrada</label>
        <locationX>611</locationX>
        <locationY>539</locationY>
        <defaultConnectorLabel>Cerrada</defaultConnectorLabel>
        <rules>
            <name>Abierta</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetOportunidad.StageName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Cerrada - Éxito</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetOportunidad.StageName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Cerrada - Perdida</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetFuncionesContacto</targetReference>
            </connector>
            <label>Abierta</label>
        </rules>
    </decisions>
    <decisions>
        <description>Nodo de decisión para comprobar si el decisor es cónyuge</description>
        <name>Conyuge</name>
        <label>Cónyuge</label>
        <locationX>402</locationX>
        <locationY>971</locationY>
        <defaultConnector>
            <targetReference>IterarDecisores</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No lo es</defaultConnectorLabel>
        <rules>
            <name>Es</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterarDecisores.Contact.AccountId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>GetOportunidad.AccountId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterarDecisores.Contact.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PotencialResidente</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IDCuentaConyuge</targetReference>
            </connector>
            <label>Es</label>
        </rules>
    </decisions>
    <decisions>
        <description>Nodo de decisión para comprobar si hay decisores en la oportunidad</description>
        <name>Decisores</name>
        <label>Decisores</label>
        <locationX>380</locationX>
        <locationY>755</locationY>
        <defaultConnectorLabel>No Hay</defaultConnectorLabel>
        <rules>
            <name>Hay</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetFuncionesContacto</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IterarDecisores</targetReference>
            </connector>
            <label>Hay</label>
        </rules>
    </decisions>
    <decisions>
        <description>Nodo de decisión para comprobar si el cónyuge tiene una oportunidad que cumpla las condiciones previas</description>
        <name>OportunidadConyuge</name>
        <label>Oportunidad Cónyuge</label>
        <locationX>182</locationX>
        <locationY>1463</locationY>
        <defaultConnectorLabel>No tiene</defaultConnectorLabel>
        <rules>
            <name>Tiene</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetOppConyuge</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CopiarEmail</targetReference>
            </connector>
            <label>Tiene</label>
        </rules>
    </decisions>
    <description>Flujo desencadenado al enviar un email desde una oportunidad que genera una tarea con la información de este en la última oportunidad del cónyuge
--
V2: Incluida casuística que la oportunidad del cónyuge no esté en etapa &quot;Envío SAP&quot;
--
V3: Modificación Flow API Version 55</description>
    <environments>Default</environments>
    <interviewLabel>Email - Crear Tarea en Oportunidad Cónyuge {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Email - Crear Tarea Oportunidad Cónyuge</label>
    <loops>
        <description>Iteramos los decisores</description>
        <name>IterarDecisores</name>
        <label>IterarDecisores</label>
        <locationX>182</locationX>
        <locationY>863</locationY>
        <collectionReference>GetFuncionesContacto</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Conyuge</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>GetOppConyuge</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Creamos el email como una tarea</description>
        <name>CrearEmailTarea</name>
        <label>CrearEmailTarea</label>
        <locationX>50</locationX>
        <locationY>1679</locationY>
        <inputReference>TareaEmailAux</inputReference>
    </recordCreates>
    <recordLookups>
        <description>Obtenemos las funciones de contacto de la oportunidad</description>
        <name>GetFuncionesContacto</name>
        <label>GetFuncionesContacto</label>
        <locationX>380</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decisores</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Role</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Decisor</stringValue>
            </value>
        </filters>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetOportunidad.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OpportunityContactRole</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Obtenemos la oportunidad relacionada con el email</description>
        <name>GetOportunidad</name>
        <label>GetOportunidad</label>
        <locationX>611</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Cerrada</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Obtenemos la última oportunidad de la cuenta del cónyuge</description>
        <name>GetOppConyuge</name>
        <label>GetOppConyuge</label>
        <locationX>182</locationX>
        <locationY>1355</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>OportunidadConyuge</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ConyugeAccountID</elementReference>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Cerrada - Éxito</stringValue>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Cerrada - Perdida</stringValue>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Envío SAP</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <sortField>LastModifiedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>732</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>AsociadoAOpp</targetReference>
        </connector>
        <object>EmailMessage</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <description>Variable de tipo texto para almacenar el ID de la cuenta del cónyuge</description>
        <name>ConyugeAccountID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Variable de tipo registro para almacenar la información del email</description>
        <name>TareaEmailAux</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Task</objectType>
    </variables>
</Flow>
