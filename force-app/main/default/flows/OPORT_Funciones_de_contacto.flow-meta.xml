<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>53.0</apiVersion>
    <assignments>
        <description>Asignacion para actualizar el booleano del Residente de la cuenta Principal</description>
        <name>Actualizar_Residente_Principal</name>
        <label>Actualizar Residente Principal</label>
        <locationX>264</locationX>
        <locationY>935</locationY>
        <assignmentItems>
            <assignToReference>ResidentePrincipal</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ContactosRelacionados</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Agregamos las variables auxiliares con los datos de los decisores a la lista de Funciones de Contacto</description>
        <name>AgregarFuncionContactoDecisor</name>
        <label>Agregar Función Contacto Decisor</label>
        <locationX>528</locationX>
        <locationY>3527</locationY>
        <assignmentItems>
            <assignToReference>ListaFunciones</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>AuxiliarFuncionContacto</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CrearFuncionesContacto</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Agregamos las variables auxiliares con los datos del residente a la lista de Funciones de Contacto</description>
        <name>AgregarFuncionContactoResidente</name>
        <label>Agregar Función Contacto Residente</label>
        <locationX>264</locationX>
        <locationY>3527</locationY>
        <assignmentItems>
            <assignToReference>ListaFunciones</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>AuxiliarFuncionContacto</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CrearFuncionesContacto</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Agregamos las variables auxiliares con los datos del residente a la lista de Funciones de Contacto</description>
        <name>AgregarFuncionContactoResidente_0_0_0</name>
        <label>Agregar Función Contacto Residente</label>
        <locationX>484</locationX>
        <locationY>1847</locationY>
        <assignmentItems>
            <assignToReference>ListaContactos</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>AuxiliarContacto</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ContactoEncontrado_0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Agregamos las variables auxiliares con los datos del residente a la lista de Funciones de Contacto</description>
        <name>AgregarFuncionContactoResidente_0_0_0_0_0</name>
        <label>Agregar Función Contacto Residente</label>
        <locationX>484</locationX>
        <locationY>2855</locationY>
        <assignmentItems>
            <assignToReference>ListaContactos</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>AuxiliarContacto</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ContactosRelacionadosCuenta</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Asignación para almacenar al contacto residente de la cuenta en una variable auxiliar</description>
        <name>Almacenar_residente_aux</name>
        <label>Almacenar residente aux</label>
        <locationX>264</locationX>
        <locationY>815</locationY>
        <assignmentItems>
            <assignToReference>Residente.ContactId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ContactosRelacionados.ContactId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Actualizar_Residente_Principal</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Cogemos los datos del contactos y los asignamos a la función de contacto decisor y lo guardamos en la Variable de registro Auxiliar</description>
        <name>AsignarCamposFuncionContactoDecisor</name>
        <label>Asignar Campos Función Contacto Decisor</label>
        <locationX>528</locationX>
        <locationY>3407</locationY>
        <assignmentItems>
            <assignToReference>AuxiliarFuncionContacto.ContactId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CrearFuncionesContacto.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AuxiliarFuncionContacto.OpportunityId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AuxiliarFuncionContacto.Role</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Decisor</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AgregarFuncionContactoDecisor</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Cogemos los datos del contactos y los asignamos a la función de contacto residente y lo guardamos en la Variable de registro Auxiliar</description>
        <name>AsignarCamposFuncionContactoResidente</name>
        <label>Asignar Campos Función Contacto Residente</label>
        <locationX>264</locationX>
        <locationY>3407</locationY>
        <assignmentItems>
            <assignToReference>AuxiliarFuncionContacto.ContactId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CrearFuncionesContacto.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AuxiliarFuncionContacto.OpportunityId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AuxiliarFuncionContacto.Role</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Residente</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AuxiliarFuncionContacto.IsPrimary</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AgregarFuncionContactoResidente</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Cogemos los datos del contactos y los asignamos a la función de contacto residente y lo guardamos en la Variable de registro Auxiliar. Utilizamos el nombre de manera temporal para asignar el nombre del tipo de registro y utilizar el contacto</description>
        <name>AsignarCamposFuncionContactoResidente_0_0_0_0</name>
        <label>Asignar Campos Función Contacto Residente</label>
        <locationX>616</locationX>
        <locationY>1487</locationY>
        <assignmentItems>
            <assignToReference>AuxiliarContacto.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ContactosRelacionadosCuenta.ContactId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AuxiliarContacto.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ContactosRelacionadosCuenta.Contact.RecordType.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AuxiliarContacto.FirstName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ContactosRelacionadosCuenta.Contact.RecordType.DeveloperName</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>InicializarExisteContacto_0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>ContactoEncontrado</name>
        <label>ContactoEncontrado</label>
        <locationX>704</locationX>
        <locationY>2423</locationY>
        <assignmentItems>
            <assignToReference>ExisteContacto</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>FuncionesContactoExistentes</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>ContactoEncontrado_0</name>
        <label>ContactoEncontrado</label>
        <locationX>484</locationX>
        <locationY>1967</locationY>
        <assignmentItems>
            <assignToReference>ExisteContacto</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>FuncionesContactoExistentes</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>InicializarExisteContacto_0</name>
        <label>InicializarExisteContacto</label>
        <locationX>616</locationX>
        <locationY>1607</locationY>
        <assignmentItems>
            <assignToReference>ExisteContacto</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>NoFunciones</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Nodo de decisión para comprobar cual de los contactos relacionados es el principal de la cuenta</description>
        <name>Comprobar_contacto_residente_principal</name>
        <label>Comprobar contacto residente principal</label>
        <locationX>396</locationX>
        <locationY>695</locationY>
        <defaultConnector>
            <targetReference>ContactosRelacionados</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Resultado predeterminado</defaultConnectorLabel>
        <rules>
            <name>ResidenteCuentaPrincipal</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ContactosRelacionados.IsDirect</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ContactosRelacionados.Contact.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PotencialResidente</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ResidentePrincipal</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Almacenar_residente_aux</targetReference>
            </connector>
            <label>ResidenteCuentaPrincipal</label>
        </rules>
    </decisions>
    <decisions>
        <name>CreamosFunciones_0</name>
        <label>CreamosFunciones</label>
        <locationX>616</locationX>
        <locationY>2735</locationY>
        <defaultConnector>
            <targetReference>ContactosRelacionadosCuenta</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Resultado predeterminado</defaultConnectorLabel>
        <rules>
            <name>SiCreamos_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ExisteContacto</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AgregarFuncionContactoResidente_0_0_0_0_0</targetReference>
            </connector>
            <label>SiCreamos</label>
        </rules>
    </decisions>
    <decisions>
        <description>Si es potencial/ Residente le asignamos la función de residente y al resto de contactos la función de decisores</description>
        <name>EsPotencialResidente</name>
        <label>Es Potencial/Residente</label>
        <locationX>396</locationX>
        <locationY>3287</locationY>
        <defaultConnector>
            <targetReference>AsignarCamposFuncionContactoDecisor</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Resultado predeterminado</defaultConnectorLabel>
        <rules>
            <name>PotencialResidente</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CrearFuncionesContacto.Id</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Residente.ContactId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AsignarCamposFuncionContactoResidente</targetReference>
            </connector>
            <label>Potencial/ Residente</label>
        </rules>
    </decisions>
    <decisions>
        <name>Existe</name>
        <label>Existe?</label>
        <locationX>836</locationX>
        <locationY>2303</locationY>
        <defaultConnector>
            <targetReference>FuncionesContactoExistentes</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Resultado predeterminado</defaultConnectorLabel>
        <rules>
            <name>SiExiste</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>FuncionesContactoExistentes.Contact.Id</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>ContactosRelacionadosCuenta.ContactId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ListaContactos</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>AuxiliarContacto</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ContactoEncontrado</targetReference>
            </connector>
            <label>Si Existe</label>
        </rules>
    </decisions>
    <decisions>
        <name>NoFunciones</name>
        <label>No hay Funciones</label>
        <locationX>616</locationX>
        <locationY>1727</locationY>
        <defaultConnector>
            <targetReference>FuncionesContactoExistentes</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Resultado predeterminado</defaultConnectorLabel>
        <rules>
            <name>NoFuncionesObtenidas</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ObtenerFuncionesContactoExistentes</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AgregarFuncionContactoResidente_0_0_0</targetReference>
            </connector>
            <label>NoFunciones</label>
        </rules>
    </decisions>
    <interviewLabel>OPORT_Funciones de contacto {!$Flow.CurrentDateTime}</interviewLabel>
    <label>OPORT_Funciones de contacto</label>
    <loops>
        <description>Bucle para iterar sobre la colección de contactos relacionados de la Cuenta Familia</description>
        <name>ContactosRelacionados</name>
        <label>Contactos relacionados</label>
        <locationX>176</locationX>
        <locationY>575</locationY>
        <collectionReference>Obtener_contactos_relacionados</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Comprobar_contacto_residente_principal</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>ObtenerFuncionesContactoExistentes</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Contactos relacionados obtenido de la Cuenta Familia</description>
        <name>ContactosRelacionadosCuenta</name>
        <label>Contactos relacionados de la Cuenta</label>
        <locationX>176</locationX>
        <locationY>1367</locationY>
        <collectionReference>Obtener_contactos_relacionados</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AsignarCamposFuncionContactoResidente_0_0_0_0</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CrearFuncionesContacto</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Crear funciones de contacto de los contactos obtenidos</description>
        <name>CrearFuncionesContacto</name>
        <label>Crear Funciones Contacto</label>
        <locationX>176</locationX>
        <locationY>3167</locationY>
        <collectionReference>ListaContactos</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>EsPotencialResidente</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CrearFuncionContactoDecisores_0</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>FuncionesContactoExistentes</name>
        <label>Funciones de Contacto Existentes</label>
        <locationX>616</locationX>
        <locationY>2183</locationY>
        <collectionReference>ObtenerFuncionesContactoExistentes</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Existe</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CreamosFunciones_0</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Creamos las funciones de contacto recopiladas en la Lista de Funciones de contacto</description>
        <name>CrearFuncionContactoDecisores_0</name>
        <label>Crear Función Contacto Decisores</label>
        <locationX>176</locationX>
        <locationY>3839</locationY>
        <inputReference>ListaFunciones</inputReference>
    </recordCreates>
    <recordLookups>
        <description>Obtenemos los contactos relacionados de la Cuenta Familia</description>
        <name>Obtener_contactos_relacionados</name>
        <label>Obtener contactos relacionados</label>
        <locationX>176</locationX>
        <locationY>455</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ContactosRelacionados</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AccountContactRelation</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Obtenemos los contactos de la Cuenta Familia</description>
        <name>ObtenerContactos</name>
        <label>Obtener contactos</label>
        <locationX>176</locationX>
        <locationY>335</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Obtener_contactos_relacionados</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Obtenemos las funciones de contacto relacionadas que ya existen en la oportunidad</description>
        <name>ObtenerFuncionesContactoExistentes</name>
        <label>Obtener Funciones Contacto Existentes</label>
        <locationX>176</locationX>
        <locationY>1247</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ContactosRelacionadosCuenta</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OpportunityContactRole</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>ObtenerContactos</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StageName</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Cerrada - Éxito</stringValue>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Cerrada - Perdida</stringValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>AuxiliarContacto</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>AuxiliarFuncionContacto</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityContactRole</objectType>
    </variables>
    <variables>
        <name>ExisteContacto</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>FuncionContactoResidente</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityContactRole</objectType>
    </variables>
    <variables>
        <name>ListaContactos</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>ListaFunciones</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityContactRole</objectType>
    </variables>
    <variables>
        <description>Variable de tipo registro para almacenar la información del residente principal de la cuenta</description>
        <name>Residente</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityContactRole</objectType>
    </variables>
    <variables>
        <description>Variable booleana para marcar cuando tenemos el contacto residente principal de la cuenta</description>
        <name>ResidentePrincipal</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>RTDeveloperName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
